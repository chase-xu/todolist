{"version":3,"sources":["components/Appbar/Appbar.js","components/todoitem/contextMenu/contextMenu.js","components/todoitem/todoitem.js","components/List/Board.js","layout/App.js","reportWebVitals.js","redux/reducer/reducer.js","redux/store/store.js","index.js"],"names":["Appbar","props","Navbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","ContextMenu","dispatch","useDispatch","useSelector","state","todos","ref","onClick","e","id","closeMenu","Todoitem","editingId","editing","itemId","pos","index","findIndex","obj","Number","useState","menu","setMenu","menuRef","useRef","contextMenu","document","removeEventListener","menuOff","useEffect","addEventListener","current","contains","target","draggable","onDragStart","dataTransfer","setData","setTimeout","style","display","onDragOver","dragOver","onDrop","drop","console","log","pageX","pageY","category","ListGroup","Item","value","item","text","Board","todosRemaining","filter","todo","todosFinished","todosInProgress","menuOn","leng","length","i","showMenu","preventDefault","card_id","getData","getElementById","list","getAttribute","div","backgroundColor","margin","height","width","padding","minHeight","Container","Row","Col","map","App","flexDirection","alignItems","alignSelf","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","completed","color","filters","status","colors","store","createStore","action","payload","newTodos","newPos","splice","newEditing","applyMiddleware","logger","thunkMiddleware","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4c6cddff.chunk.js","sourcesContent":["import React from 'react';\nimport {useEffect, useStyle, useSelector} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport FormControl from 'react-bootstrap/FormControl';\n\n\nexport default function Appbar(props){\n\n    return(\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">Chase's ToDoList</Navbar.Brand>\n            <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\">Home</Nav.Link>\n            </Nav>\n            <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-info\">Search</Button>\n            </Form>\n        </Navbar>\n    );\n}","import React from 'react';\nimport {useEffect, useStyle, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {Button } from 'react-bootstrap';\nimport './contextMenu.css';\n\nexport default function ContextMenu (props){\n    const dispatch = useDispatch();\n    const todolist = useSelector(state=>{\n        const todos = state.todos;\n        return todos;\n    })\n\n    /**Handle editing todo item */\n    const handleEdit =(e)=>{\n        const id = props.id;\n        // const toDoItem = todolist.filter(todo=> todo.id === Number(id));\n        /**Should make item's display become text field with the old input\n         * 1. use redux to pass id to inform todoitem which one is being editing\n         * \n         */\n         dispatch({type: 'editingItem', id: id});\n\n    }\n    /**Handle remove todo item */\n    const handleRemove=(e)=>{\n        const id = props.id;\n        props.closeMenu();\n        dispatch({type: 'removeItem', id: id});\n\n    }\n    return(\n        <div ref={props.ref} className={'dropdown'}>\n            <div className={'dropdown-content'}>\n                    <Button variant=\"light\" onClick={handleEdit}>Edit</Button>\n                    <Button variant=\"light\" onClick={handleRemove}>Remove</Button>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {useEffect, useStyle, useState, useRef} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContextMenu from './contextMenu/contextMenu.js';\nimport {Button } from 'react-bootstrap';\n\n\nexport default function Todoitem(props){\n\n    const dispatch = useDispatch();\n    const editingId = useSelector(state=>{\n        return state.editing;\n    });\n\n    const itemId = props.id;\n\n    const itemContent = useSelector(state=>{\n       const index = state.todos.findIndex(obj=>obj.id === Number(itemId));\n       return state.todos[index].id; \n    });\n    const pos = useSelector(state=>{\n        return state.pos;\n    });\n\n    const [menu, setMenu] = useState(false);\n\n    const dragStart =e=>{\n        const target = e.target;\n        e.dataTransfer.setData('card_id', target.id);\n        setTimeout(()=>{\n            target.style.display = \"none\";\n        }, 0);\n    };\n\n    const closeMenu =(e)=>{\n        setMenu(!menu);\n        document.removeEventListener('click', menuOff);\n    }\n\n    const menuRef =  useRef();\n    const contextMenu = <ContextMenu id={props.id} pos={pos}  closeMenu={closeMenu} />;\n\n\n    useEffect(()=>{\n        //add event listener for clicking on each item that gives the option to either delete or edit the item\n        if(menu){\n            document.addEventListener('click', menuOff);\n        }\n    },[menu])\n\n\n    const handleClick =(e)=>{\n        console.log(props.id);\n        const xPos = e.pageX + 'px';\n        const yPos = e.pageY + 'px';\n        setMenu(!menu);\n    }\n\n\n    /**\n     * if the any of the menus have be open, and the user has clicked somewhere outside of the menu, then close the menu.\n     */\n    const menuOff =(e)=>{\n        if(e === true || !menuRef.current.contains(e.target)){\n            setMenu(!menu);\n            //remove the event listener after the menu has been closed.\n            document.removeEventListener('click', menuOff);\n        }\n\n    }\n    return(\n        <div>\n            <div\n            id = {props.id}\n            draggable='true'\n            onDragStart={dragStart}\n            onDragOver={props.dragOver}\n            onDrop={props.drop}\n            onClick={handleClick}\n            category = {props.category}\n            >\n                <ListGroup.Item>{ itemId == editingId ? <input value={props.item.text}></input>  : props.item.text}</ListGroup.Item>\n            </div>\n            <div ref={menuRef}>{menu ? contextMenu: null}</div> \n        </div>\n    );\n}\n\n/**should add condition check to see if any item is been editing, if yes implement the text field instead,\n * remember to check if there is one item's being editing.\n */\n","import Todoitem from '../todoitem/todoitem.js';\nimport {useState, useEffect, useRef} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { NavbarBrand } from 'react-bootstrap';\nimport './Board.css';\n\n/**\n * Each board as an item list\n * @param {*} props \n * @returns \n */\nexport default function Board(props){\n\n    const dispatch = useDispatch()\n\n    const todosRemaining = useSelector(state => {\n        const uncompletedTodos = state.todos.filter(todo => todo.state === 'incompleted');\n        return uncompletedTodos\n    })\n\n    const todosFinished = useSelector(state=>{\n        const completedTodos = state.todos.filter(todo=> todo.state === 'completed');\n        return completedTodos;\n    })\n  \n    const todosInProgress = useSelector(state=>{\n        const progressing = state.todos.filter(todo=> todo.state === 'progressing');\n        return progressing;\n    })\n\n    const closeMenu = useSelector(state=>{\n        return state.closeMenu;\n    })\n\n    const todos = useSelector(state=>{\n        return state.todos;\n    })\n\n\n    // const [pos, setPos] = useState([]);\n    const menuOn = useSelector(state=>{\n        return state.menuOn;\n    })\n\n    const editing =(id)=>{\n        const todoitem = todos.filter(todos=> todos.id === Number(id));\n        /**should pass id to todoitem and then replace display to text field\n         * Use redux might be the quicker way\n         */\n    }\n\n    useEffect(() => {\n        if(menuOn){\n            document.addEventListener('click', e=>{\n                const xPos = e.pageX + 'px';\n                const yPos = e.pageY + 'px';\n                const leng = todos.length;\n                for( let i = 0; i < leng; i++){\n                    console.log(todos[i]);\n                    if(todos[i].showMenu === true){\n                        dispatch({type: 'toggleCloseMenu'});\n                    }\n                }\n            });\n        }\n\n   }, [])\n\n   const dragOver = e=>{\n       e.preventDefault();\n   }\n   const drop =e=>{\n       e.preventDefault();\n       const card_id = e.dataTransfer.getData('card_id');\n       const card = document.getElementById(card_id);\n       card.style.display = 'block';\n       const list = e.target.getAttribute('category');\n       console.log(e.target.getAttribute('category'));\n       dispatch({type: list, id: card_id});\n   }\n\n   /**\n    * CSS styles for components of the boards\n    */\n   const style ={\n       div: {\n            backgroundColor: 'blue',\n            margin: '5px',\n            height: '100%',\n            width: '80%',\n        },\n        list: {\n            height: '80%',\n            margin: '10px',\n            padding: '10px',\n            '& Col': {\n                margin: '50px',\n            },\n            minHeight: '300px',\n        }\n   }\n\n    return(\n        <div style={style.div}>\n            <Container  >\n                <Row style={style.list}>\n                    <Col category='todos' onDragOver={dragOver} onDrop={drop} style={{\n                        backgroundColor: 'yellow',\n                    }}>\n                        <Container category='todos' onDragOver={dragOver} onDrop={drop}>\n                                \n                                <Navbar id='nav' ><Navbar.Brand>Todos</Navbar.Brand></Navbar>\n                                <ListGroup variant=\"flush\" category='todos' onDragOver={dragOver} onDrop={drop}>\n                                    {todosRemaining.map(item=>{\n                                            return (<Todoitem category='todos' id={item.id} key={item.id} item={item} dragOver={dragOver} drop={drop}/>);\n                                        })}\n                                </ListGroup>\n                            \n                        </Container>\n                    </Col>\n                    <Col category='progressing' onDragOver={dragOver} onDrop={drop}>\n                        <Navbar id='nav' ><Navbar.Brand>Progressing</Navbar.Brand></Navbar>\n                            <ListGroup variant=\"flush\">\n                                {todosInProgress.map(item=>{\n                                    return (<Todoitem category='progressing' id={item.id} key={item.id} item={item}  list='progressing'/>);\n                                })}\n                            </ListGroup>\n                       \n                    </Col>\n                    <Col category='done' onDragOver={dragOver} onDrop={drop}>\n                        <Navbar id='nav' ><Navbar.Brand>Done</Navbar.Brand></Navbar>\n                                <ListGroup variant=\"flush\">\n                                    {todosFinished.map(item=>{\n                                        return (<Todoitem category='done' id={item.id} key={item.id} item={item} list='done' />);\n                                    })}\n                                </ListGroup>\n                        \n                    </Col>\n                </Row>\n            </Container>\n        </div>\n        \n    );\n}","import Appbar from '../components/Appbar/Appbar.js';\nimport Board from '../components/List/Board.js';\n\nconst style ={\n  Board: {\n\n  }\n}\nfunction App() {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n    }}>\n      <div style={{\n        alignSelf: 'stretch',\n      }}>\n        <Appbar/>\n      </div>\n      <div style={{\n        alignSelf: 'center',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '90%',\n        backgroundColor: 'red',\n      }}>\n        <Board style={{width: '80%'}} />\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    todos: [\n      { id: 0, text: 'Learn React', completed: true, state: 'completed', showMenu:false, },\n      { id: 1, text: 'Learn Redux', completed: false, color: 'purple' , state: 'incompleted', showMenu: false,},\n      { id: 2, text: 'Build Own Project!', completed: false, color: 'blue' , state: 'progressing', showMenu: false,},\n      { id: 3, text: 'Build Own Project!', completed: false, color: 'blue' , state: 'incompleted', showMenu: false,}\n    ],\n    filters: {\n      status: 'All',\n      colors: []\n    },\n    menuOn: false,\n    pos: [],\n    editing: null,\n  }\n  \n  // Use the initialState as a default value\n  export default function appReducer(state = initialState, action) {\n    // The reducer normally looks at the action type field to decide what happens\n    switch (action.type) {\n      // Do something here based on the different types of actions\n      case 'todos/todoAdded': {\n        // We need to return a new state object\n        return {\n          // that has all the existing state data\n          ...state,\n          // but has a new array for the `todos` field\n          todos: [\n            // with all of the old todos\n            ...state.todos,\n            // and the new todo object\n            {\n              // Use an auto-incrementing numeric ID for this example\n              id: state.todos,\n              text: action.payload,\n              completed: false\n            }\n          ]\n        }\n      }\n      case 'todos':{\n        const index = state.todos.findIndex((obj=>obj.id === Number(action.id)));\n        let newTodos = [...state.todos];\n        newTodos[index] = {...newTodos[index], state: 'incompleted'}\n        return {\n          ...state,\n          todos: [\n            ...newTodos\n          ]\n        }\n      }\n\n      case 'progressing':{\n        const index = state.todos.findIndex((obj=>obj.id === Number(action.id)));\n        let newTodos = [...state.todos];\n        newTodos[index] = {...newTodos[index], state: 'progressing'}\n        return {\n          ...state,\n          todos: [\n            ...newTodos\n          ]\n        }\n      }\n\n      case 'done':{\n        const index = state.todos.findIndex((obj=>obj.id === Number(action.id)));\n        let newTodos = [...state.todos];\n        newTodos[index] = {...newTodos[index], state: 'completed'}\n        return {\n          ...state,\n          todos: [\n            ...newTodos\n          ]\n        }\n      }\n\n      case 'toggleCloseMenu':{\n        let newTodos = [...state.todos];\n        const leng = newTodos.length;\n        for(let i = 0; i < leng; i++){\n          if(newTodos[i].showMenu === true){\n            newTodos[i].showMenu = false;\n          }\n        }\n        let menu = false;\n        return{\n          ...state,\n          menuOn: menu,\n          todos:[...newTodos],\n        }\n\n      }\n\n      case 'toggleMenu':{\n        const index = state.todos.findIndex(obj=>obj.id === Number(action.id));\n        let newTodos = [...state.todos];\n        newTodos[index] = {...newTodos[index], showMenu: !newTodos[index].showMenu};\n        return{\n          ...state,\n          menuOn: !state.menuOn,\n          todos:[...newTodos],\n        }\n      }\n\n      case 'updatePos':{\n        let newPos = action.pos;\n        return{\n          ...state,\n          pos: newPos,\n        }\n      }\n\n      case 'removeItem': {\n        let newTodos = state.todos;\n        const id = Number(action.id);\n        const index = state.todos.findIndex(obj=>obj.id === id);\n        newTodos.splice(index, 1);\n        return{\n          ...state,\n          todos:[...newTodos],\n        }\n\n      }\n\n      case 'editingItem':{\n        let newTodos = state.todos;\n        const id = Number(action.id);\n        let newEditing = id;\n        return{\n          ...state,\n          editing: newEditing,\n        }        \n\n      }\n\n\n      default:\n        // If this reducer doesn't recognize the action type, or doesn't\n        // care about this specific action, return the existing state unchanged\n        return state\n    }\n  }","import { applyMiddleware, createStore } from 'redux';\n \n// Logger with default options\nimport logger from 'redux-logger';\nimport reducer from '../reducer/reducer.js';\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger, thunkMiddleware)\n)\n \n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store.js';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route>\n        <Provider store={store}>\n          <App/>\n        </Provider>\n        </Route>\n      </Switch>\n    </Router>\n   </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}